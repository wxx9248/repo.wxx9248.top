#!/usr/bin/env python3
import requests
import os
from pathlib import Path
from dataclasses import dataclass

release_endpoint = "https://api.github.com/repos/wxx9248/Arch-Linux-Kernel-Build/releases/latest"
staging_directory_path = Path("staging/x86_64")


@dataclass
class Downlodable:
    name: str
    url: str


def fetch_downloadables():
    response = requests.get(
        release_endpoint,
        headers={
            "Accept": "application/vnd.github+json",
            "X-GitHub-Api-Version": "2022-11-28"
        }
    )
    return map(lambda asset: Downlodable(asset["name"], asset["browser_download_url"]), response.json()["assets"])


def download(downloadable: Downlodable, path: Path):
    target_file_path = path / downloadable.name
    print(f"[i] Downloading {downloadable.name} to {target_file_path}")
    with open(target_file_path, "wb") as target_file:
        response = requests.get(downloadable.url, allow_redirects=True)
        target_file.write(response.content)


def main():
    print(f"[i] Current working directory: {os.getcwd()}")
    staging_directory_path.mkdir(parents=True, exist_ok=True)
    for downloadable in fetch_downloadables():
        download(downloadable, staging_directory_path)


if __name__ == "__main__":
    main()
